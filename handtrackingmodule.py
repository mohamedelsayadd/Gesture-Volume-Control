# -*- coding: utf-8 -*-
"""HandTrackingModule.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AXAqGS5C_p85KmnL8SR1-GvHKN7kPREu
"""

import cv2
import mediapipe as mp
import time

class handDetector() :
    def __init__(self,mode=False,maxHands=2,detectioncon=0.5,trackcon=0.5) :
        self.mode = mode
        self.maxHands = maxHands
        self.detectioncon = detectioncon
        self.trackcon = trackcon
        self.mPhands = mp.solutions.hands
        self.hands = self.mPhands.Hands(self.mode,self.maxHands,min_detection_confidence=self.detectioncon, min_tracking_confidence=self.trackcon)
        self.mpDraw = mp.solutions.drawing_utils

    def findHands(self,img,draw=True) :
        img_RGB = cv2.cvtColor(img , cv2.COLOR_BGR2RGB)
        self.results = self.hands.process(img_RGB)

        if self.results.multi_hand_landmarks :
            for handlms in self.results.multi_hand_landmarks :
                if draw :
                    self.mpDraw.draw_landmarks(img , handlms , self.mPhands.HAND_CONNECTIONS)
                    
        return img

    def findPositions (self , img , handNo = 0 , draw = True) :
        lmList = []
        if self.results.multi_hand_landmarks :
            myHand = self.results.multi_hand_landmarks[handNo]
            for id,lm in enumerate (myHand.landmark) :
                h,w,c = img.shape
                cx,cy = int (lm.x*w) , int(lm.y*h)
                lmList.append((cx,cy,id))
        return lmList

def main () :
    pTime = 0
    cTime = 0
    cap = cv2.VideoCapture(0)
    detector = handDetector()
    while True :
        ret,frmae = cap.read()
        frame = detector.findHands(frame)
        lmlist = detector.findPositions(frame)
        if len(lmlist) != 0 :
            print(lmlist[4])

        cTime = time.time()
        fps = 1 / (cTime-pTime)
        pTime = cTime

        cv2.putText(frame , str(int(fps)) , (10,70) , cv2.FONT_HERSHEY_PLAIN , 3 , (255,0,255) , 3 )

        cv2.imshow("frame" , frame)
        cv2.waitKey(1)

